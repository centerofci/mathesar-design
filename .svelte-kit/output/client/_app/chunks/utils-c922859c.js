var C=Object.defineProperty;var w=Object.getOwnPropertySymbols;var K=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;var E=(e,t,n)=>t in e?C(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,h=(e,t)=>{for(var n in t||(t={}))K.call(t,n)&&E(e,n,t[n]);if(w)for(var n of w(t))L.call(t,n)&&E(e,n,t[n]);return e};import{r as J}from"./randomColor-af782e7b.js";import"./lodash-8a03b776.js";import{v as O}from"./v4-bf0bf616.js";/*! (c) 2020 Andrea Giammarchi */const{parse:P,stringify:R}=JSON,{keys:q}=Object,g=String,$="string",v={},d="object",j=(e,t)=>t,M=e=>e instanceof g?g(e):e,V=(e,t)=>typeof t===$?new g(t):t,F=(e,t,n,s)=>{const i=[];for(let r=q(n),{length:o}=r,l=0;l<o;l++){const a=r[l],f=n[a];if(f instanceof g){const c=e[f];typeof c===d&&!t.has(c)?(t.add(c),n[a]=v,i.push({k:a,a:[e,t,c,s]})):n[a]=s.call(n,a,c)}else n[a]!==v&&(n[a]=s.call(n,a,f))}for(let{length:r}=i,o=0;o<r;o++){const{k:l,a}=i[o];n[l]=s.call(n,l,F.apply(null,a))}return n},T=(e,t,n)=>{const s=g(t.push(n)-1);return e.set(n,s),s},b=(e,t)=>{const n=P(e,V).map(M),s=n[0],i=t||j,r=typeof s===d&&s?F(n,new Set,s,i):s;return i.call({"":r},"",r)},p=(e,t,n)=>{const s=t&&typeof t===d?(c,m)=>c===""||-1<t.indexOf(c)?m:void 0:t||j,i=new Map,r=[],o=[];let l=+T(i,r,s.call({"":e},"",e)),a=!l;for(;l<r.length;)a=!0,o[l]=R(r[l++],f,n);return"["+o.join(",")+"]";function f(c,m){if(a)return a=!a,m;const u=s.call(this,c,m);switch(typeof u){case d:if(u===null)return u;case $:return i.get(u)||T(i,r,u)}return u}};let I="simpleDB-entities",S=0;function z(){let e=window.localStorage.getItem(I);return e?b(e):null}function A(e){window.localStorage.setItem(I,p(e))}function k(e){return e.endsWith("Id")}function y(e){return e.substring(0,e.length-2)}function B(e){return e.endsWith("y")?e.substring(0,e.length-1)+"ies":y(e)+"s"}function x(e){Object.entries(e).forEach(([t,n])=>{n.forEach(s=>{Object.keys(s).filter(k).forEach(i=>{let r=y(i),o=B(i),l=s[i],a=e[o],f=(a||[]).find(c=>c.id==l);if(!a)console.log(`The entity '${r}' mentioned in the entity '${t}' with id ${s.id} does not exist`);else if(f)f[t]||(f[t]=[]),s[r]=f,f[t].push(s);else throw`The id ${l} does not exist in ${r}`})})})}function D(e,t){let n=Object.keys(t),i=n.filter(k).map(y),r={};return n.forEach(o=>{!i.includes(o)&&!e.includes(o)&&(r[o]=t[o])}),r}async function N(e){let n=await(await fetch(`/data/${e}.json`)).json();return[e,n]}async function W(...e){let t=z(),n=function(){},s=e[e.length-1];if(typeof s=="function"&&(n=s,e=e.slice(0,e.length-1)),t)return x(t),t;let i=e.map(r=>N(r));return Promise.all(i).then(function(r){let o={};return r.forEach(function([l,a]){o[l]=a}),x(o),n(o)}).catch(function(r){throw`Error while loading entities: ${r}`})}async function _(e){if(!e)return;let t=++S;setTimeout(()=>{if(t==S){let n={},s=Object.keys(e);s.forEach(i=>{let r=e[i].map(o=>D(s,o));n[i]=r}),A(n)}},200)}function X(e){return JSON.parse(JSON.stringify(e))}function Y(e,t){return e.constraints.filter(n=>n.type=="Foreign Key").map(n=>n.column).includes(t.name)}function Z(e,t){return t.constraints.filter(n=>n.type=="Foreign Key").map(n=>n.referenceTable.id).includes(e.id)}function ee(e,t){return e.columns.indexOf(e.columns.find(n=>n==t))}async function te(){function e(t){return t.tables.forEach(n=>{n.color=J({luminosity:"light"}),n.columns.forEach(s=>{s.id=O()})}),console.log(t.tables),t.tables.forEach(n=>{n.constraints.forEach((s,i)=>{if(s.type=="Foreign Key"){let r=t.tables.find(o=>o.id==s.referenceTable.tableId);s.referenceTable=h({},r)}})}),t.views.forEach(n=>{let s=t.tables.find(i=>i.id==n.baseTable.tableId);n.baseTable=h({},s)}),t}return await W("schemas","tables","views","queries",e)}async function ne(e){_(e)}let se={text:["contains"],list:["includes"],number:["equals","greater than","less than"]},ie={text:["value","first letter"],list:["value"],number:["value","range"]},re={List:{type:"text"},Count:{type:"number"},Sum:{type:"number",restrict:["number"]},Avg:{type:"number",restrict:["number"]}},oe={text:{aggregations:["List","Count"]},number:{aggregations:["Count","Sum","Avg","Max","Min","List"]}};function ae(e){let t=b(p(e)),n={id:O(),name:`Query of ${t.name}`,type:"query",baseTable:t,columns:t.columns,records:t.records,schemaId:t.schema.id,steps:{}};return n.columns.forEach(i=>{i.alias=i.name,i.source={link:{column:i,table:t},table:t}}),b(p(n))}export{p as a,re as b,se as c,X as d,Z as e,ie as f,ee as g,Y as i,te as l,ae as n,b as p,ne as s,oe as t};
